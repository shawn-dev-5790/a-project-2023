import Head from 'next/head'
import ui from '@/styles/page_mvp_showcase.module.scss'
import useSWR from 'swr'
import React, { useEffect, useState } from 'react'
import { onfetch } from '@/helpers'
// import SidePanel from './components/side_panel'
import { ZoomAbleScatterPlotWithQuadrant } from '@/lib/charts'

export default function PageMVPShowcase() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' />
        <link rel='icon' href='/favicon.ico' />
        <style>{`
          ._tt{position:absolute;display:flex;flex-flow:column;justify-content:center;align-items:center;gap:10px;padding:4px;width:120px;background-color:black;color:white;font-size:12px;border-radius:4px}
          ._tt img{display:block;width:100%;text-align:center;object-fit:cover}
        `}</style>
      </Head>
      <div className={ui.page_mvp_showcase}>
        <Header />
        <Main />
        <Footer />
      </div>
    </>
  )
}

function Header() {
  return (
    <header>
      <h1>Welcome to visit our workplace for MVP 2023</h1>
    </header>
  )
}
function Footer() {
  const link = {
    vercel: 'https://vercel.com/shawndev5790-gmailcom/a-project-2023/HpApdv4QicanWP8VpZE1K2r41PkM',
    github: 'https://github.com/shawn-dev-5790/a-project-2023',
  }
  return (
    <footer>
      <a href={link.vercel} target='_blank' rel='noopener noreferrer'>
        visit vercel
      </a>
      <a href={link.github} target='_blank' rel='noopener noreferrer'>
        visit github
      </a>
    </footer>
  )
}
function Main() {
  //   const { data, error, isLoading, isValidating } = useSWR<any, any>(() => '/api/getShowcaseList', onfetch)
  const { data, error, isLoading, isValidating } = useSWR<any, any>(() => '/api/display_list', onfetch)
  const currency = new Intl.NumberFormat('ko', { style: 'currency', currency: 'KRW' })
  const number = new Intl.NumberFormat('ko', {})
  const onErrorImg = (e: any) => {
    e.target.src = 'https://dummyimage.com/200x200/efefef/444444.png&text=no-image'
  }
  const list = data?.data.data || []
  const getPercent = (value: number, fieldname: string) => {
    const targets = list.map((item: { [k: string]: any }) => item[fieldname])
    const min = Math.min(...targets)
    const max = Math.max(...targets)
    const per = Math.ceil(((value - min) / max) * 100)
    return per
  }
  const [sort, setSort] = useState('ecpm')
  const [selected, setSelected] = useState(27241)

  useEffect(() => {
    if (!isLoading) {
      const c = new ZoomAbleScatterPlotWithQuadrant()
      c.init().zoomTo(selected)
    }
  }, [selected, isLoading])
  return (
    <>
      <main>
        {isLoading && 'loading...'}
        {!isLoading && (
          <div className={ui.content}>
            <div className={ui.preview}>
              <ul>
                {list.map((item: any, idx: number) => (
                  <li
                    id={item.item_id}
                    key={`${item.item_id}-${item.sequence_no}`}
                    onClick={() => setSelected(item.item_id)}
                  >
                    <span>
                      <img
                        loading='lazy'
                        src={item.main_item_img}
                        alt={`image of ${item.item_name}`}
                        onError={onErrorImg}
                      />
                    </span>
                    <div>
                      <div>idx:{idx}</div>
                      <div className={'g_ellipsis_2'}>{item.item_name}</div>
                      <div>{currency.format(item.selling_price)}</div>
                      <div>ecpm={item.ecpm.toFixed(0)}</div>
                      <div>ecpm_per={getPercent(item.ecpm, 'ecpm')}%</div>
                      <div>노출수={number.format(item.imp_cnt)}</div>
                      <div>view_cvr={number.format(item.view_cvr)}</div>
                      <div>구매건수={number.format(item.conversion_cnt)}</div>
                    </div>
                  </li>
                ))}
              </ul>
            </div>
            <div id='target' className={ui.target}></div>
          </div>
        )}
        {/* <SidePanel d={list} /> */}
      </main>
    </>
  )
}
